/* Generated by Yosys 0.53 (git sha1 53c22ab7c0ced80861c7536c5dae682c30fb5834, g++ 15.1.1 -O2 -flto=auto -ffat-lto-objects -fexceptions -fstack-protector-strong -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -mtls-dialect=gnu2 -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -fPIC -O3) */

(* dynports =  1  *)
(* top =  1  *)
module ripple_adder_prim(i_carry, i_data0, i_data1, o_sum, o_carry);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  (* hdlname = "ADD_STAGE[0].u_full_adder i_carry" *)
  wire \ADD_STAGE[0].u_full_adder.i_carry ;
  (* hdlname = "ADD_STAGE[0].u_full_adder i_data0" *)
  wire \ADD_STAGE[0].u_full_adder.i_data0 ;
  (* hdlname = "ADD_STAGE[0].u_full_adder i_data1" *)
  wire \ADD_STAGE[0].u_full_adder.i_data1 ;
  (* hdlname = "ADD_STAGE[0].u_full_adder o_carry" *)
  wire \ADD_STAGE[0].u_full_adder.o_carry ;
  (* hdlname = "ADD_STAGE[0].u_full_adder o_sum" *)
  wire \ADD_STAGE[0].u_full_adder.o_sum ;
  (* hdlname = "ADD_STAGE[1].u_full_adder i_carry" *)
  wire \ADD_STAGE[1].u_full_adder.i_carry ;
  (* hdlname = "ADD_STAGE[1].u_full_adder i_data0" *)
  wire \ADD_STAGE[1].u_full_adder.i_data0 ;
  (* hdlname = "ADD_STAGE[1].u_full_adder i_data1" *)
  wire \ADD_STAGE[1].u_full_adder.i_data1 ;
  (* hdlname = "ADD_STAGE[1].u_full_adder o_carry" *)
  wire \ADD_STAGE[1].u_full_adder.o_carry ;
  (* hdlname = "ADD_STAGE[1].u_full_adder o_sum" *)
  wire \ADD_STAGE[1].u_full_adder.o_sum ;
  (* hdlname = "ADD_STAGE[2].u_full_adder i_carry" *)
  wire \ADD_STAGE[2].u_full_adder.i_carry ;
  (* hdlname = "ADD_STAGE[2].u_full_adder i_data0" *)
  wire \ADD_STAGE[2].u_full_adder.i_data0 ;
  (* hdlname = "ADD_STAGE[2].u_full_adder i_data1" *)
  wire \ADD_STAGE[2].u_full_adder.i_data1 ;
  (* hdlname = "ADD_STAGE[2].u_full_adder o_carry" *)
  wire \ADD_STAGE[2].u_full_adder.o_carry ;
  (* hdlname = "ADD_STAGE[2].u_full_adder o_sum" *)
  wire \ADD_STAGE[2].u_full_adder.o_sum ;
  (* hdlname = "ADD_STAGE[3].u_full_adder i_carry" *)
  wire \ADD_STAGE[3].u_full_adder.i_carry ;
  (* hdlname = "ADD_STAGE[3].u_full_adder i_data0" *)
  wire \ADD_STAGE[3].u_full_adder.i_data0 ;
  (* hdlname = "ADD_STAGE[3].u_full_adder i_data1" *)
  wire \ADD_STAGE[3].u_full_adder.i_data1 ;
  (* hdlname = "ADD_STAGE[3].u_full_adder o_carry" *)
  wire \ADD_STAGE[3].u_full_adder.o_carry ;
  (* hdlname = "ADD_STAGE[3].u_full_adder o_sum" *)
  wire \ADD_STAGE[3].u_full_adder.o_sum ;
  wire [4:0] carry;
  input i_carry;
  wire i_carry;
  input [3:0] i_data0;
  wire [3:0] i_data0;
  input [3:0] i_data1;
  wire [3:0] i_data1;
  output o_carry;
  wire o_carry;
  output [3:0] o_sum;
  wire [3:0] o_sum;
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _12_ (
    .A(i_data0[0]),
    .B(i_data1[0]),
    .Y(_00_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _13_ (
    .A(i_carry),
    .B(_02_),
    .Y(_01_)
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _14_ (
    .A(_00_),
    .B(_01_),
    .Y(\ADD_STAGE[0].u_full_adder.o_carry )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _15_ (
    .A(_02_),
    .B(i_carry),
    .Y(\ADD_STAGE[0].u_full_adder.o_sum )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _16_ (
    .A(i_data0[0]),
    .B(i_data1[0]),
    .Y(_02_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _17_ (
    .A(i_data0[1]),
    .B(i_data1[1]),
    .Y(_03_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _18_ (
    .A(\ADD_STAGE[0].u_full_adder.o_carry ),
    .B(_05_),
    .Y(_04_)
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _19_ (
    .A(_03_),
    .B(_04_),
    .Y(\ADD_STAGE[1].u_full_adder.o_carry )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _20_ (
    .A(_05_),
    .B(\ADD_STAGE[0].u_full_adder.o_carry ),
    .Y(\ADD_STAGE[1].u_full_adder.o_sum )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _21_ (
    .A(i_data0[1]),
    .B(i_data1[1]),
    .Y(_05_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _22_ (
    .A(i_data0[2]),
    .B(i_data1[2]),
    .Y(_06_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _23_ (
    .A(\ADD_STAGE[1].u_full_adder.o_carry ),
    .B(_08_),
    .Y(_07_)
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _24_ (
    .A(_06_),
    .B(_07_),
    .Y(\ADD_STAGE[2].u_full_adder.o_carry )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _25_ (
    .A(_08_),
    .B(\ADD_STAGE[1].u_full_adder.o_carry ),
    .Y(\ADD_STAGE[2].u_full_adder.o_sum )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _26_ (
    .A(i_data0[2]),
    .B(i_data1[2]),
    .Y(_08_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _27_ (
    .A(i_data0[3]),
    .B(i_data1[3]),
    .Y(_09_)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _28_ (
    .A(\ADD_STAGE[2].u_full_adder.o_carry ),
    .B(_11_),
    .Y(_10_)
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _29_ (
    .A(_09_),
    .B(_10_),
    .Y(\ADD_STAGE[3].u_full_adder.o_carry )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _30_ (
    .A(_11_),
    .B(\ADD_STAGE[2].u_full_adder.o_carry ),
    .Y(\ADD_STAGE[3].u_full_adder.o_sum )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) _31_ (
    .A(i_data0[3]),
    .B(i_data1[3]),
    .Y(_11_)
  );
  assign \ADD_STAGE[0].u_full_adder.i_data1  = i_data1[0];
  assign \ADD_STAGE[0].u_full_adder.i_data0  = i_data0[0];
  assign \ADD_STAGE[0].u_full_adder.i_carry  = i_carry;
  assign \ADD_STAGE[1].u_full_adder.i_data1  = i_data1[1];
  assign \ADD_STAGE[1].u_full_adder.i_data0  = i_data0[1];
  assign \ADD_STAGE[1].u_full_adder.i_carry  = \ADD_STAGE[0].u_full_adder.o_carry ;
  assign \ADD_STAGE[2].u_full_adder.i_data1  = i_data1[2];
  assign \ADD_STAGE[2].u_full_adder.i_data0  = i_data0[2];
  assign \ADD_STAGE[2].u_full_adder.i_carry  = \ADD_STAGE[1].u_full_adder.o_carry ;
  assign \ADD_STAGE[3].u_full_adder.i_data1  = i_data1[3];
  assign \ADD_STAGE[3].u_full_adder.i_data0  = i_data0[3];
  assign \ADD_STAGE[3].u_full_adder.i_carry  = \ADD_STAGE[2].u_full_adder.o_carry ;
  assign carry = { \ADD_STAGE[3].u_full_adder.o_carry , \ADD_STAGE[2].u_full_adder.o_carry , \ADD_STAGE[1].u_full_adder.o_carry , \ADD_STAGE[0].u_full_adder.o_carry , i_carry };
  assign o_carry = \ADD_STAGE[3].u_full_adder.o_carry ;
  assign o_sum = { \ADD_STAGE[3].u_full_adder.o_sum , \ADD_STAGE[2].u_full_adder.o_sum , \ADD_STAGE[1].u_full_adder.o_sum , \ADD_STAGE[0].u_full_adder.o_sum  };
endmodule
